#include <string>
#include <vector>
#include <iostream>

using namespace std;

string conversion(string p)
{
    if(p == "") return "";
    int flag = 0;
    bool isCorrect = false;

    int i = 0;
    do
    {
        if(p[i] == '(')
        {
            if(i == 0) isCorrect = true;
            flag++;
        }
        else if(p[i] == ')')
        {
            if(i == 0) isCorrect = false;
            flag--;
        }
        i++;
    } while (flag != 0);
    string u = p.substr(0, i);
    string v = p.substr(i, p.length() - i);

    cout << "u : " << u << "\n";
    cout << "v : " << v << "\n";

    string temp = "";
    if(isCorrect)
    {
        temp += u;
        temp += conversion(v);
    }
    else
    {
        temp += '(';
        v = conversion(v);
        temp += v;
        temp += ')';
        u = u.substr(1, u.length()-2);
        for(int i = 0 ; i < u.length() ; i++)
        {
            if(u[i] == '(')
                u[i] = ')';
            else if(u[i] == ')')
                u[i] = '(';
        }
        temp += u;
    }
    cout << "temp : " << temp << "\n\n";
    return temp;
}

string solution(string p) {
    string answer = "";
    
    answer += conversion(p);

    return answer;
}

int main(){
    cout << solution("()))((()");

    return 0;
}

// https://programmers.co.kr/learn/courses/30/lessons/60058

/*
1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. 
2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다.
    단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다. 
3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다. 
  3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. 
4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다. 
  4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다. 
  4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. 
  4-3. ')'를 다시 붙입니다. 
  4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다. 
  4-5. 생성된 문자열을 반환합니다.

과정-----------
빈 문자열이면 종료
'(' 가 들어오면 +1
')' 가 들어오면 -1
숫자가 + -> 0 -> 올바른 괄호 // u, isCorrect = true
숫자가 - -> 0 -> 균형잡힌 괄호, 올바른x // u, isCorrect = false
나머지 문자열 -> v
---------------

1) isCorrect
    temp += u
    temp += 과정(v)
2) !isCorrect
    temp에 += '('
    temp += v에 대해 과정을 재귀적으로 수행
    temp += v
    temp += ')'
    u의 첫, 마지막 문자를 제거
    u의 괄호를 뒤집어 temp뒤에 이어 붙힘
return temp
    

*/
